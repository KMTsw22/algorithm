#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

//부모노드를 찾는 함수
int getParent(int parent[], int x) {
    if (parent[x] == x) 
        return x;
    return parent[x] = getParent(parent, parent[x]);
}
// 두 부모 노드를 합치는 함수
void unionParent(int parent[], int a, int b) {
    a = getParent(parent, a);
    b = getParent(parent, b);
    if (a < b) parent[b] = a;
    else parent[a] = b;
}
// 같은 부모를 가지는지 확인
int findParent(int parent[], int a, int b) {
    a = getParent(parent, a);
    b = getParent(parent, b);
    if (a == b) return 1;
    return 0;

}

int main(){
    int parent[11] = { 0 };
    for (int i = 1; i < 11; i++) {
        parent[i] = i;

    }
    unionParent(parent, 1, 2);

    unionParent(parent, 2, 3);
    unionParent(parent, 3, 4);
    unionParent(parent, 4, 5);
    cout << findParent(parent, 1, 4) << endl;
}
